Ddoc

$(CHANGELOG_NAV_INJECT)

$(VERSION Jan 1, 2013, =================================================,

    $(WHATSNEW
        $(LI DMD now shows deprecated features as warnings by default (a
             message is displayed but compilation is not halted anymore).
             There are also 2 new compiler flags: -de, to get the old default
             behaviour (using deprecated features is an error) and -dw, to
             explicitly enable the new default behaviour (just warn).
             This makes it possible to add -de in the configuration file to
             get the old default and still be able to override that default
             by using -dw when compiling.
             The -d flag stays the same (silently ignore deprecated features).
        )
        $(LI Complete list of $(WHATSNEW2 2012-08-02, 2012-12-31))
    )
    $(BUGSFIXED
        $(LI $(DMDBUGSFIXED2 2012-08-02, 2013-01-01))
        $(LI $(DRUNTIMEBUGSFIXED2 2012-08-02, 2012-12-31))
        $(LI $(PHOBOSBUGSFIXED2 2012-08-02, 2012-12-31))
    )
$(COMMENT
    $(WHATSNEW
        $(LI $(BUGZILLA 1353): Can't use typeof() in base class list.)
        $(LI $(BUGZILLA 1427): Generated .di files look ugly and are hard to read)
        $(LI $(BUGZILLA 8108): Forward declaration and implementation allowed in same file)
        $(LI $(BUGZILLA 8794): DDoc should provide qualified symbol names suitable for anchors)
        $(LI $(BUGZILLA 9219): Allow matching { } in asm statements.)
        $(LI $(BUGZILLA 9221): Added -di flag to make use of deprecated symbols a warning)
        $(LI $(BUGZILLA 9222): Add User Defined Attributes)
        $(LI $(BUGZILLA 9223): Add -de and -dw switches)
        $(LI $(BUGZILLA 9224): Add Win64 code generation support for use with Visual C)
        $(LI $(BUGZILLA 9225): Add sections [Environment32] and [Environment64] to sc.ini/dmd.conf)
        $(LI $(BUGZILLA 9226): More simd instructions allowed as intrinsics.)
        $(LI $(BUGZILLA 9227): __traits(identifier,...) to pick out identifier from parameter list tuple)
        $(LI $(BUGZILLA 9228): Add getProtection to __traits())
    )
    $(RUNTIMEBUGSFIXED
        $(LI $(BUGZILLA 391): .sort and .reverse break utf8 encoding)
        $(LI $(BUGZILLA 8936): Throwing results in searching the whole directory tree rooted in current directory)
    )
    $(LIBBUGSFIXED
        $(LI $(BUGZILLA 9060): std.range.chain and std.range.zip cannot get frame pointer)
    )
    $(DMDBUGSFIXED
        $(LI $(BUGZILLA 2273): Whitespace is not inserted after commas)
        $(LI $(BUGZILLA 2775): "private" ignored for templates)
        $(LI $(BUGZILLA 2830): private attribute doesn't work for structs/unions/classes)
        $(LI $(BUGZILLA 4082): nothrow main() can throw)
        $(LI $(BUGZILLA 5448): Array of AAs literal doesn't work)
        $(LI $(BUGZILLA 5587): Use __LINE__ to pick number in unittest block names)
        $(LI $(BUGZILLA 5679): Type aliasing "this" from an access function defined in base class confuses the compiler about the type of objects)
        $(LI $(BUGZILLA 5832): Template alias parameters are never successfully pattern matched)
        $(LI $(BUGZILLA 5996): ICE(expression.c) CTFE of erroneous auto return function)
        $(LI $(BUGZILLA 6373): More descriptive 'hidden by X is deprecated' error)
        $(LI $(BUGZILLA 6395): ICE(glue.c) Multiple-at-a-time bug breaking e.g. DustMite)
        $(LI $(BUGZILLA 6937): new with struct doesn't allow field assignment)
        $(LI $(BUGZILLA 6969): Forward reference on template class triangle)
        $(LI $(BUGZILLA 7003): no tuple expansion for c++ mangling)
        $(LI $(BUGZILLA 7017): Pure inference makes inconsistent result)
        $(LI $(BUGZILLA 7192): improve error message for "object.d cannot be read")
        $(LI $(BUGZILLA 7220): Bad initialization when using mixin to generate a static field in a -lib'rary)
        $(LI $(BUGZILLA 7810): [CTFE] Typesafe variadic function with array of structs)
        $(LI $(BUGZILLA 7876): [CTFE] assertion failure on invalid stack reference)
        $(LI $(BUGZILLA 7940): CTFE wrong-code for opAssign and std.array.Appender)
        $(LI $(BUGZILLA 7998): static assert message string printing problem)
        $(LI $(BUGZILLA 8178): Wrong line number in trying to modify enum string)
        $(LI $(BUGZILLA 8257): __traits(compiles) gives compile error)
        $(LI $(BUGZILLA 8271): [Ddoc] non-ascii character string macro names cannot be replaced)
        $(LI $(BUGZILLA 8339): is(typeof(...)) is reporting true when it's false due to nested function error)
        $(LI $(BUGZILLA 8376): 64 bit codegen bug involving dynamically indexed static array and continue statement)
        $(LI $(BUGZILLA 8377): Unexpected OPTLINK Termination at EIP=004106BE)
        $(LI $(BUGZILLA 8340): *= operator breaks long array in x64)
        $(LI $(BUGZILLA 8348): ICE(glue.c): 'semanticRun == PASSsemantic3done' on line 547 in file 'glue.c')
        $(LI $(BUGZILLA 8422): [CTFE] TypeTuple of tuples can't be read at compile time)
        $(LI $(BUGZILLA 8408): Purity calculation should be improved)
        $(LI $(BUGZILLA 8484): [CTFE] Assertion failure: 'thisval $(AMP)$(AMP) thisval->op == TOKclassreference' on line 4896 in file 'interpret.c'.)
        $(LI $(BUGZILLA 8497): Regression 2.060: Bad code gen involving ubyte, ternary operators, and shifts)
        $(LI $(BUGZILLA 8519): winsamp.d doesn't compile with 2.060)
        $(LI $(BUGZILLA 8556): Using take results in a corrupted call to opSlice)
        $(LI $(BUGZILLA 8601): CTFE Assertion failure (interpret.c) on dstring[].toUpper)
        $(LI $(BUGZILLA 8623): Multiple function match needs to print file+line numbers)
        $(LI $(BUGZILLA 8624): Regression: CTFE: long comparisons completely broken)
        $(LI $(BUGZILLA 8630): Assertion failure: 'fd $(AMP)$(AMP) fd->inferRetType' on line 81 in file 'mangle.c')
        $(LI $(BUGZILLA 8644): CTFE doesn't support string $(LESS),$(GREATER) on array literals)
        $(LI $(BUGZILLA 8673): enum z = [0][(()=>$-1)()]; crashes the compiler)
        $(LI $(BUGZILLA 8675): Nothrow can't throw Errors)
        $(LI $(BUGZILLA 8714): Missing error message with circular use of CTFE)
        $(LI $(BUGZILLA 8770): Wrong error line number with immutable field)
        $(LI $(BUGZILLA 8774): 2.059 worked 2.060 does not: nested delegate memory corruption)
        $(LI $(BUGZILLA 8788): The super constructor call can be prevented by mentioning "return".)
        $(LI $(BUGZILLA 8796): Optimizer bug on 64bit: *p++=1 where p is a parameter)
        $(LI $(BUGZILLA 8801): assigning to __ctfe crashes the compiler)
        $(LI $(BUGZILLA 8818): CTFE fails to compare strings correctly)
        $(LI $(BUGZILLA 8830): [CTFE] Incorrect slicing with pointer from sliced array)
        $(LI $(BUGZILLA 8836): function called with argument types ((void function())) matches both f(void function() fn) and f(void delegate() dg))
        $(LI $(BUGZILLA 8840): calculating minimum of longs with following comparison compiles to wrong code when enabling the optimizer)
        $(LI $(BUGZILLA 8857): [CTFE] does not evaluate to a boolean, only with -inline)
        $(LI $(BUGZILLA 8870): Incorrect values passing struct by value)
        $(LI $(BUGZILLA 8889): [2.061 beta][64-bit] Assertion Failure argtypes.c)
        $(LI $(BUGZILLA 8894): 2.059: Lookup error message has become uninformative)
        $(LI $(BUGZILLA 8923): Destructors of struct members get called at the wrong point)
        $(LI $(BUGZILLA 8928): Poor error message for derived class without constructor)
        $(LI $(BUGZILLA 8939): ICE(glue.c) on passing by ref statically initialized const/immutable variable)
        $(LI $(BUGZILLA 8940): Able to modify const/immutable with passing to a templated function by `ref`)
        $(LI $(BUGZILLA 8942): `alias <qualifier> <type>` ignores <qualifier> in foreach over tuple)
        $(LI $(BUGZILLA 8943): Cannot get parent of an overload)
        $(LI $(BUGZILLA 8966): ICE(cgcod.c) when passing cfloat argument with indirection)
        $(LI $(BUGZILLA 8971): __traits(getOverloads) fails in a member function)
        $(LI $(BUGZILLA 8986): The PVS-Studio analyzer has something for you)
        $(LI $(BUGZILLA 8990): Forward reference error on three structs)
        $(LI $(BUGZILLA 8937): import declaration statement without scope after `if` imports to a parent scope)
        $(LI $(BUGZILLA 8987): Compiling using -O -release options yield Internal error: backend\cgcod.c 1663)
        $(LI $(BUGZILLA 9000): ICE on assigning struct's `init` to enum)
        $(LI $(BUGZILLA 9003): Nested structs smetimes have null context pointers in static struct)
        $(LI $(BUGZILLA 9004): Wrong line number for undefined identifier error)
        $(LI $(BUGZILLA 9006): Static struct with nested struct fields sometimes has current context pointers in `init`)
        $(LI $(BUGZILLA 9008): Another forward referencing bug)
        $(LI $(BUGZILLA 9010): opEquals() const results in not-covered code)
        $(LI $(BUGZILLA 9013): Compiler crash with foreach on wrongly defined interval)
        $(LI $(BUGZILLA 9025): core.thread.Fiber seems to crash on Win64)
        $(LI $(BUGZILLA 9026): Template mixin identifier as template alias parameter doesn't work)
        $(LI $(BUGZILLA 9035): Nested struct `init` is lvalue and can be modified)
        $(LI $(BUGZILLA 9036): postblit is called for nested structs when assigning `init`)
        $(LI $(BUGZILLA 9046): typeof(T.init) should have the type T)
        $(LI $(BUGZILLA 9057): Regression(Beta): Segfault or 'Non-constant expression' error with local import)
        $(LI $(BUGZILLA 9058): Problem with std.traits.EnumMembers conversion to array)
        $(LI $(BUGZILLA 9069): struct literals are treated as lvalues)
        $(LI $(BUGZILLA 9070): nothrow of constructer/destructor isn't correct)
        $(LI $(BUGZILLA 9076): Aliased template function and property resolution doesn't work)
        $(LI $(BUGZILLA 9077): Struct copy constructor ignored when opAssign with a different type is present)
        $(LI $(BUGZILLA 9090): auto ref doesn't work with arrays)
        $(LI $(BUGZILLA 9093): Overloads in extern(C++) interfaces throw up COMDAT errors)
        $(LI $(BUGZILLA 9100): Weird behavior on template instance argument)
        $(LI $(BUGZILLA 9124): Object variable of variadic template struct needs explicit "this" in certain situations)
        $(LI $(BUGZILLA 9140): ref foreach of immutables in postcondition)
        $(LI $(BUGZILLA 9143): template structs with two parameters confuse DMD on multiple instantiations)
        $(LI $(BUGZILLA 9153): Type inference for array of delegates should not break based on order)
        $(LI $(BUGZILLA 9154): Incorrectly generated assignment operator)
        $(LI $(BUGZILLA 9162): [tdpl] Non-static structs should have access to outer lexical scope)
        $(LI $(BUGZILLA 9170): CTFE: Allow reinterpret casts float $(LESS)-$(GREATER) int)
        $(LI $(BUGZILLA 9171): error optimization of expression)
        $(LI $(BUGZILLA 9210): [2.061 beta] Import cycle causes unpredictable compile errors)
        $(LI $(BUGZILLA 9213): [2.061 beta] Member access without this and __traits(compiles, ...))
    )
)
)
$(CHANGELOG_NAV_INJECT)

Macros:
        VER=2.061
        TITLE=Change Log: $(VER)
        WHATSNEW2=$(LINK2 https://issues.dlang.org/buglist.cgi?chfieldto=$2$(AMP)query_format=advanced$(AMP)chfield=resolution$(AMP)chfieldfrom=$1$(AMP)chfieldvalue=FIXED$(AMP)bug_severity=enhancement$(AMP)bug_status=RESOLVED$(AMP)version=D2$(AMP)version=D1%20%26%20D2$(AMP)resolution=FIXED$(AMP)product=D, New/Changed Features)
        DMDBUGSFIXED2=$(LINK2 https://issues.dlang.org/buglist.cgi?chfieldto=$2$(AMP)query_format=advanced$(AMP)chfield=resolution$(AMP)chfieldfrom=$1$(AMP)chfieldvalue=FIXED$(AMP)bug_severity=regression$(AMP)bug_severity=blocker$(AMP)bug_severity=critical$(AMP)bug_severity=major$(AMP)bug_severity=normal$(AMP)bug_severity=minor$(AMP)bug_severity=trivial$(AMP)bug_status=RESOLVED$(AMP)version=D2$(AMP)version=D1%20%26%20D2$(AMP)component=DMD$(AMP)resolution=FIXED$(AMP)product=D, DMD Bugs Fixed)
        DRUNTIMEBUGSFIXED2=$(LINK2 https://issues.dlang.org/buglist.cgi?chfieldto=$2$(AMP)query_format=advanced$(AMP)chfield=resolution$(AMP)chfieldfrom=$1$(AMP)chfieldvalue=FIXED$(AMP)bug_severity=regression$(AMP)bug_severity=blocker$(AMP)bug_severity=critical$(AMP)bug_severity=major$(AMP)bug_severity=normal$(AMP)bug_severity=minor$(AMP)bug_severity=trivial$(AMP)bug_status=RESOLVED$(AMP)version=D2$(AMP)version=D1%20%26%20D2$(AMP)component=druntime$(AMP)resolution=FIXED$(AMP)product=D, Druntime Bugs Fixed)
        PHOBOSBUGSFIXED2=$(LINK2 https://issues.dlang.org/buglist.cgi?chfieldto=$2$(AMP)query_format=advanced$(AMP)chfield=resolution$(AMP)chfieldfrom=$1$(AMP)chfieldvalue=FIXED$(AMP)bug_severity=regression$(AMP)bug_severity=blocker$(AMP)bug_severity=critical$(AMP)bug_severity=major$(AMP)bug_severity=normal$(AMP)bug_severity=minor$(AMP)bug_severity=trivial$(AMP)bug_status=RESOLVED$(AMP)version=D2$(AMP)version=D1%20%26%20D2$(AMP)component=Phobos$(AMP)resolution=FIXED$(AMP)product=D, Phobos Bugs Fixed)
