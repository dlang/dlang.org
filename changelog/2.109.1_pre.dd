Ddoc

$(CHANGELOG_NAV_INJECT)

$(VERSION Jul 01, 2024, =================================================,

$(CHANGELOG_HEADER_STATISTICS
$(VER) comes with 1 major change and 4 fixed Bugzilla issues.
        A huge thanks goes to the
        $(LINK2 #contributors, 5 contributors)
        who made $(VER) possible.)

$(BUGSTITLE_TEXT_HEADER Compiler changes,

$(LI $(RELATIVE_LINK2 dmd.unsafe-boolean-values,`bool` values other than 0 or 1 are not `@safe`))

)

$(CHANGELOG_SEP_HEADER_TEXT_NONEMPTY)

$(CHANGELOG_SEP_HEADER_TEXT)

$(BUGSTITLE_TEXT_BODY Compiler changes,

$(LI $(LNAME2 dmd.unsafe-boolean-values,`bool` values other than 0 or 1 are not `@safe`)
$(CHANGELOG_SOURCE_FILE dmd, changelog/dmd.unsafe-boolean-values.dd)
$(P
The spec has been updated so that only 0 and 1 are
[safe values](https://dlang.org/spec/function.html#safe-values)
for `bool`. This means that reading a `bool` value whose underlying byte representation
has other bits set is implementation-defined and should be avoided. Consequently:
)

$(P
* `void` initialization of booleans is now deprecated in `@safe` code.
* Reading a `bool` field from a union is now deprecated in `@safe` code.
)

$(P
Runtime array casting to `bool[]` is
[yet to be deprecated](https://issues.dlang.org/show_bug.cgi?id=24582).
)
)


)

$(CHANGELOG_SEP_TEXT_BUGZILLA)

$(BUGSTITLE_BUGZILLA DMD Compiler bug fixes,

$(LI $(BUGZILLA 24566): condition that starts with runtime value and uses compile time array does not short circuit)
$(LI $(BUGZILLA 24596): Rebindable2 corrupts objects)
)
$(BUGSTITLE_BUGZILLA DMD Compiler enhancements,

$(LI $(BUGZILLA 24595): OpenBSD: Use .init_array/.fini_array)
$(LI $(BUGZILLA 24597): FreeBSD/OpenBSD: Enable ELF_COMDAT)
)
)
$(D_CONTRIBUTORS_HEADER 5)
$(D_CONTRIBUTORS
    $(D_CONTRIBUTOR Brian Callahan)
    $(D_CONTRIBUTOR Iain Buclaw)
    $(D_CONTRIBUTOR Mathis Beer)
    $(D_CONTRIBUTOR Nick Treleaven)
    $(D_CONTRIBUTOR Timon Gehr)
)
$(D_CONTRIBUTORS_FOOTER)
$(CHANGELOG_NAV_INJECT)

Macros:
    VER=2.109.1
    TITLE=Change Log: $(VER)
